//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IMS.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class InstituteEntities1 : DbContext
    {
        public InstituteEntities1()
            : base("name=InstituteEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int spFeesDetailsInsert(Nullable<int> studentId, Nullable<int> course_id, Nullable<System.DateTime> dateOfPayment, Nullable<int> amount)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(int));
    
            var course_idParameter = course_id.HasValue ?
                new ObjectParameter("course_id", course_id) :
                new ObjectParameter("course_id", typeof(int));
    
            var dateOfPaymentParameter = dateOfPayment.HasValue ?
                new ObjectParameter("DateOfPayment", dateOfPayment) :
                new ObjectParameter("DateOfPayment", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFeesDetailsInsert", studentIdParameter, course_idParameter, dateOfPaymentParameter, amountParameter);
        }
    
        public virtual ObjectResult<spGetAllFromFeeDetails_Result> spGetAllFromFeeDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetAllFromFeeDetails_Result>("spGetAllFromFeeDetails");
        }
    
        public virtual ObjectResult<spGetCourseListByStudentId_Result> spGetCourseListByStudentId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetCourseListByStudentId_Result>("spGetCourseListByStudentId", idParameter);
        }
    
        public virtual ObjectResult<spGetFeeDatailsById_Result> spGetFeeDatailsById(Nullable<int> receipt_Id)
        {
            var receipt_IdParameter = receipt_Id.HasValue ?
                new ObjectParameter("Receipt_Id", receipt_Id) :
                new ObjectParameter("Receipt_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetFeeDatailsById_Result>("spGetFeeDatailsById", receipt_IdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spGetFeeDetailsData(Nullable<int> student_id, Nullable<int> course_id)
        {
            var student_idParameter = student_id.HasValue ?
                new ObjectParameter("Student_id", student_id) :
                new ObjectParameter("Student_id", typeof(int));
    
            var course_idParameter = course_id.HasValue ?
                new ObjectParameter("course_id", course_id) :
                new ObjectParameter("course_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spGetFeeDetailsData", student_idParameter, course_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spGetLastReceiptId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spGetLastReceiptId");
        }
    
        public virtual ObjectResult<spGetStudentList_Result> spGetStudentList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetStudentList_Result>("spGetStudentList");
        }
    
        public virtual int spUpdateFeeDatails(Nullable<int> receipt_id, Nullable<int> studentId, Nullable<int> course_id, Nullable<System.DateTime> dateOfPayment, Nullable<int> amount)
        {
            var receipt_idParameter = receipt_id.HasValue ?
                new ObjectParameter("Receipt_id", receipt_id) :
                new ObjectParameter("Receipt_id", typeof(int));
    
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(int));
    
            var course_idParameter = course_id.HasValue ?
                new ObjectParameter("course_id", course_id) :
                new ObjectParameter("course_id", typeof(int));
    
            var dateOfPaymentParameter = dateOfPayment.HasValue ?
                new ObjectParameter("DateOfPayment", dateOfPayment) :
                new ObjectParameter("DateOfPayment", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateFeeDatails", receipt_idParameter, studentIdParameter, course_idParameter, dateOfPaymentParameter, amountParameter);
        }
    }
}
